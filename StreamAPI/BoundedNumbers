package advance.StreamAPI;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

/* 1. first line, read two numbers, a lower and an upper bound, separated by a space
2. On the second line, read a sequence of numbers, separated by a space.
3.Print all numbers, such that [lower bound] ≤ n ≤ [upper bound].  */
public class BoundedNumbers {

    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader( new InputStreamReader( System.in ) );


        List<Integer> bounds =Arrays.stream (reader.readLine().split( " " ))
                .map( Integer::parseInt )
                .sorted(Integer::compare ) //сортираме в нарастващ ред
                .collect( Collectors.toList());

       List<Integer> numbers = Arrays.stream( reader.readLine().split( " " ) )
               .map( Integer::parseInt )
               .collect( Collectors.toList());


       List<Integer>finalNumbers = numbers.stream()
               .filter( x->x>=bounds.get( 0 )&& x<= bounds.get( 1 ) )
               .collect( Collectors.toList());

        finalNumbers.forEach(x-> System.out.print(x+" ")  );
            
        }

    }

